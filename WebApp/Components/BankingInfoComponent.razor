@inject IBankingInfoRepository _bankingRepo

<div class="bg-white shadow overflow-hidden sm:rounded-lg">
    <div class="px-4 py-5 sm:px-6">
        <h3 class="text-lg leading-6 font-medium text-gray-900">
            Banking Information
        </h3>
    </div>


    @if (bankInfo is not null)
    {


        <div class="grid grid-cols-1 gap-5 sm:grid-cols-3">


            @foreach (var item in bankInfo)
            {

                <!-- Card -->
                <div class="mx-4 mb-4 bg-white overflow-hidden shadow rounded-lg @(item.IsPrimary ? "border-2 border-indigo-500/75" : "border-2")">

                    <div class="bg-white shadow-sm p-4 flex cursor-pointer">

                        <input type="radio" name="project-type" value="Newsletter" class="sr-only" aria-labelledby="project-type-0-label" aria-describedby="project-type-0-description-0 project-type-0-description-1">
                        <div class="flex-1 flex">
                            <div class="flex flex-col">
                                <span id="project-type-0-label" class="block text-lg font-medium text-gray-900">
                                    @item.AccountNumber
                                </span>
                                <span id="project-type-0-description-0" class="mt-1 flex items-center text-sm text-gray-500">
                                    @item.AccountHolderName
                                </span>
                                <span id="project-type-0-description-0" class="mt-1 flex items-center text-sm text-gray-500">
                                    IFSC: @item.IFSCCode
                                </span>
                                <span id="project-type-0-description-1" class="mt-6 text-sm font-medium text-gray-900">
                                    @item.BankName
                                </span>
                                <span id="project-type-0-description-0" class="mt-1 flex items-center text-sm text-gray-500">
                                    @if (item.AccountType > 0)
                                    {
                                        @item.AccountType.GetDisplayName()
                                    }
                                </span>
                            </div>
                        </div>

                        @if (item.IsPrimary)
                        {
                            <svg class="h-6 w-6 text-indigo-600" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path></svg>
                        }
                    </div>


                </div>

            }


        </div>


    }


</div>







@code {

    [Parameter]
    public string userId { get; set; }

    IEnumerable<BankingInfo> bankInfo;

    protected override Task OnInitializedAsync()
    {
        bankInfo = _bankingRepo.GetBankingInfoByUserId(new Guid(userId));
        return base.OnInitializedAsync();
    }

}