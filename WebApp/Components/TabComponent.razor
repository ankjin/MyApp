

<div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">



    @*<div class="mt-10">
        <div class="max-w-6xl mx-auto">
        </div>
        </div>*@


    <!-- Dynamic Tabs -->
    <div>
        <div class="sm:hidden">
            <label for="tabs" class="sr-only">Select a tab</label>
            <!-- Use an "onChange" listener to redirect the user to the selected tab URL. -->
            <select id="tabs" name="tabs" @bind="activeTab" class="block w-full focus:ring-indigo-500 focus:border-indigo-500 border-gray-300 rounded-md">
                @foreach (var item in tabItems.ToList())
                {
                    <option value="@item.Id" @onchange="@(() => TabChangedHandler(item.Id))">@item.Name</option>
                }
            </select>
        </div>
        <div class="hidden sm:block">
            <div class="border-b border-gray-200">
                <nav class="-mb-px flex space-x-8" aria-label="Tabs">

                    @foreach (var item in tabItems.ToList())
                    {
                        <a id="@item.Id" @onclick="@(() => TabChangedHandler(item.Id))" class="cursor-pointer hover:text-gray-700 hover:border-gray-300 group inline-flex items-center py-4 px-1 border-b-2 font-medium text-sm @(item.Id == activeTab ? "border-b-4 border-appBlue1" : "border-transparent hover:text-appBlue1 hover:border-appBlue1")">

                            @if (item.Id == 0)
                            {
                                <svg xmlns="http://www.w3.org/2000/svg" class="-ml-0.5 mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                                </svg>
                            }

                            @if (item.Id == 1)
                            {
                                <svg xmlns="http://www.w3.org/2000/svg" class="-ml-0.5 mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
                                </svg>
                            }

                            @if (item.Id == 2)
                            {
                                <svg xmlns="http://www.w3.org/2000/svg" class="-ml-0.5 mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z" />
                                </svg>
                            }
                            @item.Name
                        </a>
                    }

                </nav>
            </div>
        </div>
    </div>


    <!-- Dynamic Tabs -->




    <div class="mt-2">
        @foreach (var item in tabItems)
        {
            if (item.Id == 0 && item.Id == activeTab)
            {
                <div class="relative">


                    @*<PersonalInfoComponent userId="@userId" />*@
                    @Personal


                </div>

            }

            if (item.Id == 1 && item.Id == activeTab)
            {

                <div class="relative">

                    @*<BankingInfoComponent userId="@userId" />*@
                    @Banking

                </div>

            }

            if (item.Id == 2 && item.Id == activeTab)
            {

                <div class="relative">

                    @*<NomineeInfoComponent userId="@userId" />*@
                    @Nominee

                </div>
            }

        }


    </div>





</div>





@code {

    //[Parameter]
    //public string userId { get; set; }
    [Parameter]
    public RenderFragment Personal { get; set; }
    [Parameter]
    public RenderFragment Banking { get; set; }
    [Parameter]
    public RenderFragment Nominee { get; set; }

    List<TabItem> tabItems = new List<TabItem>();
    int activeTab { get; set; }

    protected override Task OnInitializedAsync()
    {
        tabItems.Add(new TabItem { Id = 0, Name = "Profile Info", Href = "", IsCurrent = false });
        tabItems.Add(new TabItem { Id = 1, Name = "Banking Info", Href = "", IsCurrent = false });
        tabItems.Add(new TabItem { Id = 2, Name = "Nominee Info", Href = "", IsCurrent = false });
        activeTab = 0;

        return base.OnInitializedAsync();
    }

    void TabChangedHandler(int newIndex)
    {
        activeTab = newIndex;
    }



}