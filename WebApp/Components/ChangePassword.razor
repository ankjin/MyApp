



<div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:align-middle sm:max-w-lg sm:w-full">
    <div class="bg-white px-4 pt-4 pb-4">
        <div class="sm:flex sm:items-start">
            <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
                <!-- Heroicon name: outline/exclamation -->
                <svg class="h-6 w-6 text-red-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                </svg>
            </div>
            <div class="sm:mt-0 sm:ml-4 sm:text-left">
                <h3 class="text-lg leading-6 font-medium text-gray-900 text-truncate" id="modal-title">
                    Change Password?
                </h3>
                <div class="mt-2">


                    <div class="sm:grid sm:grid-cols-6 sm:gap-2 sm:items-start sm:border-t sm:border-gray-200 sm:py-5">
                        <label for="city" class="sm:col-span-2 block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                            Current Password
                        </label>
                        <div class="mt-1 sm:mt-0 sm:col-span-4">
                            <input type="text" @bind-value="currentPassword" class="max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md">
                        </div>
                    </div>

                    <div class="sm:grid sm:grid-cols-6 sm:gap-2 sm:items-start sm:border-t sm:border-gray-200 sm:py-5">
                        <label for="region" class="sm:col-span-2 block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                            New Password
                        </label>
                        <div class="mt-1 sm:mt-0 sm:col-span-4">
                            <input type="text" @bind-value="newPassword" class="max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md">
                        </div>
                    </div>

                    <div class="sm:grid sm:grid-cols-6 sm:gap-2 sm:items-start sm:border-t sm:border-gray-200 sm:py-5">
                        <label for="postal-code" class="sm:col-span-2 block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                            Confirm New Password
                        </label>
                        <div class="mt-1 sm:mt-0 sm:col-span-4">
                            <input type="text" @bind-value="confirmPassword" class="max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md">
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </div>
    <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
        <button type="button" @onclick="Submit" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:text-red-500 focus:ring-1 focus:ring-offset-1 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm">
            Submit
        </button>
        <button type="button" @onclick="Cancel" class="w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-1 focus:ring-offset-1 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
            Cancel
        </button>
    </div>
</div>



@code { 

    [CascadingParameter]
    BlazoredModalInstance ModalInstance { get; set; }

    [Parameter]
    public string curPwd { get; set; }

    private string currentPassword;
    private string newPassword;
    private string confirmPassword;

    //UserDto userDto;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }


    void Submit()
    {
        string current = Utility.Encrypt(currentPassword);
        if (curPwd != current)
        {
            return;
        }

        if(string.IsNullOrEmpty(newPassword) && string.IsNullOrWhiteSpace(newPassword))
        {
            return;
        }

        if(newPassword != confirmPassword)
        {
            return;
        }
        curPwd = Utility.Encrypt(newPassword);

        ModalInstance.CloseAsync(ModalResult.Ok($"{curPwd}"));
    }
    void Cancel()
    {
        ModalInstance.CancelAsync();

    }

}
