@inherits LayoutComponentBase

@inject AuthenticationStateProvider _authStateProvider
@inject IUserModelRepository _userRepo
@inject IPersonalInfoRepository _personalRepo
@inject IModalService _modal
<!--
  This example requires updating your template:

  ```
  <html class="h-full bg-gray-100">
  <body class="h-full">
  ```
-->



@if(loggedUser is not null)
{



<div class="min-h-full">

    <!--
    lg:pl-64
    -->
    <div class="flex flex-col flex-1">





        <div class="relative z-10 flex-shrink-0 flex h-16 bg-white border-b border-gray-200 lg:border-none">
            <button type="button" class="px-4 border-r border-gray-200 text-gray-400 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-cyan-500 lg:hidden">
                <span class="sr-only">Open sidebar</span>
                <!-- Heroicon name: outline/menu-alt-1 -->
                <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h8m-8 6h16" />
                </svg>
            </button>
            <!-- Search bar -->
            <div class="flex-1 px-4 flex justify-between sm:px-6 lg:max-w-6xl lg:mx-auto lg:px-8">
                <div class="flex-1 flex">
                    <form class="w-full flex md:ml-0" action="#" method="GET">
                        <label for="search-field" class="sr-only">Search</label>
                        <div class="relative w-full text-gray-400 focus-within:text-gray-600">
                            <div class="absolute inset-y-0 left-0 flex items-center pointer-events-none" aria-hidden="true">
                                <!-- Heroicon name: solid/search -->
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
                                </svg>
                            </div>
                            <input id="search-field" name="search-field" class="block w-full h-full pl-8 pr-3 py-2 border-transparent text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-0 focus:border-transparent sm:text-sm" placeholder="Search transactions" type="search">
                        </div>
                    </form>
                </div>
                <div class="ml-4 flex items-center md:ml-6">
                    <!-- Notification dropdown -->
                    <div class="ml-3 relative">
                        <div>
                            <button @onclick="(() => collapseNotificationMenu = !collapseNotificationMenu)" type="button" class="@(collapseNotificationMenu ? "":"relative z-10") bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-cyan-500">
                                <span class="sr-only">View notifications</span>
                                <!-- Heroicon name: outline/bell -->
                                <span class="relative inline-block">
                                    <svg class="h-6 w-6 mt-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9" />
                                    </svg>
                                    <span class="absolute top-1 right-0 inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-red-100 transform translate-x-1/2 -translate-y-1/2 bg-red-600 rounded-full">3</span>
                                </span>
                            </button>
                        </div>
                        <button @onclick="(() => collapseNotificationMenu = !collapseNotificationMenu)" tabindex="-1" class="fixed inset-0 h-full w-full bg-black opacity-40 cursor-default @(collapseNotificationMenu ? "hidden" : "")"></button>
                        <div class="origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none @(collapseNotificationMenu ? "hidden" : "")" role="menu" aria-orientation="vertical" aria-labelledby="user-menu-button" tabindex="-1">
                            <!-- Active: "bg-gray-100", Not Active: "" -->
                            <AuthorizeView>
                                <Authorized>
                                    <a href="/member/dashboard" @onclick="hideProfileMenu" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-0">Dashboard</a>
                                    @if (loggedUser is not null)
                                    {
                                        <a href="/member/information/@loggedUser.Id" @onclick="hideProfileMenu" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-0">Profile Info</a>
                                        <a href="/member/referal-list/@loggedUser.Id" @onclick="hideProfileMenu" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-0">My Referals</a>
                                    }

                                    <a href="/member/investment/@loggedUser.Id" @onclick="hideProfileMenu" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-0">My Investment</a>
                                    <a href="/member/investment/calculator" @onclick="hideProfileMenu" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-0">Calculator</a>


                                    <a @onclick="@((p) => ChangePassword(loggedUser.Password))" class="cursor-pointer block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-1">Change Password</a>
                                    <a href="/" @onclick="(() => Logout())" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-2">Logout</a>
                                </Authorized>
                            </AuthorizeView>

                        </div>
                    </div>


                    <!-- Profile dropdown -->
                    <div class="ml-3 @(collapseProfileMenu ? "":"relative")">
                        <div>
                            <button @onclick="(() => collapseProfileMenu = !collapseProfileMenu)" type="button" class="@(collapseProfileMenu ? "":"relative z-10") max-w-xs bg-white rounded-full flex items-center text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-cyan-500 lg:p-2 lg:rounded-md lg:hover:bg-gray-50" id="user-menu-button" aria-expanded="false" aria-haspopup="true">

                                @*<img @onclick="(() => collapseProfileMenu = !collapseProfileMenu)" @onfocusout="hideProfileMenu" class="h-8 w-8 rounded-full" src="@(string.IsNullOrEmpty(UserProfileImg) ? $"_content/webapp/myassets/resources/avatar.svg" : UserProfileImg)" alt="">*@
                                <ProfileImage IsCursorPointerOn="false" HSize="h-8" WSize="w-8" CssOptions="rounded-full" Src="@loggedUser.UserImg64" />

                                <AuthorizeView>
                                    <Authorized>
                                        <span class="hidden ml-3 text-gray-700 text-sm font-medium lg:block"><span class="sr-only">Open user menu for </span>@context.User.Identity.Name</span>
                                    </Authorized>
                                </AuthorizeView>



                                <!-- Heroicon name: solid/chevron-down -->
                                <svg class="hidden flex-shrink-0 ml-1 h-5 w-5 text-gray-400 lg:block" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                                </svg>
                            </button>
                        </div>
                        <button @onclick="(() => collapseProfileMenu = !collapseProfileMenu)" tabindex="-1" class="fixed inset-0 h-full w-full bg-black opacity-40 cursor-default @(collapseProfileMenu ? "hidden" : "")"></button>

                        <!--
          Dropdown menu, show/hide based on menu state.

          Entering: "transition ease-out duration-100"
            From: "transform opacity-0 scale-95"
            To: "transform opacity-100 scale-100"
          Leaving: "transition ease-in duration-75"
            From: "transform opacity-100 scale-100"
            To: "transform opacity-0 scale-95"
        -->
                        <div class="origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none @(collapseProfileMenu ? "hidden" : "")" role="menu" aria-orientation="vertical" aria-labelledby="user-menu-button" tabindex="-1">
                            <!-- Active: "bg-gray-100", Not Active: "" -->
                            <AuthorizeView>
                                <Authorized>
                                    <a href="/member/dashboard" @onclick="hideProfileMenu" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-0">Dashboard</a>
                                    @if (loggedUser is not null)
                                    {
                                        <a href="/member/information/@loggedUser.Id" @onclick="hideProfileMenu" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-0">Profile Info</a>
                                        <a href="/member/referal-list/@loggedUser.Id" @onclick="hideProfileMenu" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-0">My Referals</a>
                                    }

                                    <a href="/member/investment/@loggedUser.Id" @onclick="hideProfileMenu" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-0">My Investment</a>
                                    <a href="/member/investment/calculator" @onclick="hideProfileMenu" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-0">Calculator</a>


                                    <a @onclick="@((p) => ChangePassword(loggedUser.Password))" class="cursor-pointer block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-1">Change Password</a>
                                    <a href="/" @onclick="(() => Logout())" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-2">Logout</a>
                                </Authorized>
                            </AuthorizeView>

                        </div>
                    </div>
                </div>
            </div>
        </div>


        <main class="flex-1 pb-8">

            <AuthorizeView>
                <Authorized>
                    @if (loggedUser is not null)
                    {
                        <MemberPageHeader UserId="@loggedUser.Id.ToString()" />
                    }
                </Authorized>
            </AuthorizeView>


            @Body

        </main>
    </div>
</div>


}
@code {

    User loggedUser;
    PersonalInfo personalInfo;
    string UserProfileAddress;
    protected async override Task OnInitializedAsync()
    {
        loggedUser = await ((CustomAuthenticationStateProvider)_authStateProvider).GetLoggedInUser();
        if(loggedUser is not null)
        {
            personalInfo = _personalRepo.GetPersonalInfoByUserId(loggedUser.Id);
            if(personalInfo is not null)
            {
                UserProfileAddress = personalInfo.Address;
            }
        }

        await base.OnInitializedAsync();
    }








    private async void ChangePassword(string pwd)
    {
        hideProfileMenu();

        var parameters = new ModalParameters();
        parameters.Add("curPwd", pwd);


        var options = new ModalOptions()
        {
            HideCloseButton = true,
            DisableBackgroundCancel = false,
            Class = "blazored-modal",
            HideHeader = true,
            Animation = ModalAnimation.FadeInOut(0.5)
        };

        var login = _modal.Show<ChangePassword>("", parameters, options);

        var result = await login.Result;

        if (!result.Cancelled)
        {
            var newPwd = result.Data.ToString();
            if (newPwd != loggedUser.Password)
            {
                loggedUser.Password = newPwd;
                _userRepo.Update(loggedUser);
            }


        }
    }

    private async void Logout()
    {
        await ((CustomAuthenticationStateProvider)_authStateProvider).MarkUserAsLoggedOut();
    }


    private bool collapseNavMenu = false;
    private bool collapseProfileMenu = true;
    private bool collapseNotificationMenu = true;

    private void ToggleProfileMenu()
    {
        collapseProfileMenu = !collapseProfileMenu;
    }

    private void hideProfileMenu()
    {
        collapseProfileMenu = true;
    }
    private void hideNotificationMenu()
    {
        collapseNotificationMenu = true;
    }

    private void ToggleNavMenu(bool collapse)
    {
        collapseNavMenu = collapse;
    }

    private void ToggleNotificationMenu()
    {
        collapseNotificationMenu = !collapseNotificationMenu;
    }


}