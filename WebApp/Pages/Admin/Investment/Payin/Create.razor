@page "/admin/investment/create/{UserId}"
@attribute [Authorize(Roles = "Admin")]
@inject NavigationManager _navManager
@inject IInvestmentModelRepository _investRepo

    <InvestmentForm TitleOperation="Create Investment" investmentModel="@investmentModel" OnValidSubmit="FormSubmit" OnCancelSubmit="FormCancel" ErrorMsg="@Errormsg" />

    @code {
        [Parameter]
        public string UserId { get; set; }
        private InvestmentModel investmentModel = new();
        private string Errormsg = "";

        protected override void OnInitialized()
        {
            base.OnInitialized();



            investmentModel.UserModelId = new Guid(UserId);
            investmentModel.InvestDate = DateTime.UtcNow;
            investmentModel.RateReturn = 1;
            investmentModel.InvestDateMaturity = DateTime.UtcNow.AddYears(3);
        }

        private void FormSubmit()
        {
            if (investmentModel.InvestAmount > 0)
            {
                investmentModel.CreatedDate = DateTime.UtcNow;
                investmentModel.IsActive = true;
                _investRepo.Create(investmentModel);

                _navManager.NavigateTo($"admin/investment/index/" + UserId);
            }
            else
            {
                InvokeAsync(() =>
                {
                    StateHasChanged();
                });
            }

        }
        private void FormCancel()
        {
            _navManager.NavigateTo($"admin/investment/index/" + UserId);
        }

    }
