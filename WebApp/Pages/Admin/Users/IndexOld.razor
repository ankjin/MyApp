@page "/admin/users/indexold"
@attribute [Authorize(Roles = "Admin")]

@using System.ComponentModel.DataAnnotations
@inject IUserModelRepository _userRepo
@inject IModalService _modal
@inject IEmailSender _emailSender

@if (users != null)
{

    <div class="flex flex-col">
        <div class="-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
            <div class="py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8">
                <div class="shadow overflow-hidden border-b border-gray-200 sm:rounded-lg">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Img
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Role
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Full Name
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Source Partner
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Referred By
                                </th>
                                @*<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Active
                                </th>*@
                                <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    <a href="admin/users/create">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m5 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                                        </svg>
                                    </a>
                                </th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            @foreach (var item in users)
                            {
                                OddEven = 1;

                            <tr class="@(OddEven % 2 == 0 ? "bg-gray-50" : "bg-white")">
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                                    <div class="flex-shrink-0 h-10 w-10">
                                        <ProfileImage IsCursorPointerOn="true" HSize="h-10" WSize="w-10" CssOptions="rounded-full" Src="@item.UserImg64" />
                                    </div>
                                </td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                                    @item.Role.RoleName
                                </td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                                    @item.FullName
                                </td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                                    @item.SourcePartner.Name
                                </td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                                    @GetUserById(item.ReferredById)
                                </td>
                                @*<td class="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                                    <input id="IsActive" name="IsActive" @bind="@item.IsActive" type="checkbox" class="focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded" />
                                </td>*@
                                <td class="flex items-center px-4 py-3 whitespace-nowrap text-right text-sm font-medium">
                                    <a class="px-2" href="admin/users/edit/@item.Id">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" />
                                        </svg>
                                    </a>
                                    <a class="px-2 cursor-pointer" @onclick="@((p) => DeleteItem(item.Id, item.FullName))">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                        </svg>
                                    </a>
                                    |
                                    <a class="px-2 cursor-pointer" @onclick="@((p) => SendUserEmail(item.EmailAddress))">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                                        </svg>
                                    </a>
                                    |
                                    <a class="px-2" href="admin/additional/information/@item.Id">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                                        </svg>
                                    </a>

                                    @*<a class="px-2" href="admin/info/personal/edit/@item.Id">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                                        </svg>
                                    </a>
                                    |
                                    <a class="px-2" href="admin/info/banking/@item.Id">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
                                        </svg>
                                    </a>
                                    |
                                    <a class="px-2" href="admin/info/nominee/edit/@item.Id">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z" />
                                        </svg>
                                    </a>*@
                                </td>
                            </tr>
                                OddEven += 1;
                            }

                            <!-- More people... -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}


@code {

    public IEnumerable<User> users;
    private int OddEven;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        users = _userRepo.GetAllWithRoleWithSourcePartner();
    }

    private string GetUserById(string id)
    {
        string referredName = "";
        if(!string.IsNullOrEmpty(id))
        {
            referredName = _userRepo.GetByGuid(new Guid(id)).FullName;
        }
        return referredName;
    }


    private async void DeleteItem(Guid id, string itemName)
    {


        var parameters = new ModalParameters();
        parameters.Add("paramString", itemName);


        var options = new ModalOptions()
        {
            HideCloseButton = true,
            DisableBackgroundCancel = false,
            Class = "blazored-modal",
            HideHeader = true,
            Animation = ModalAnimation.FadeInOut(0.5)
        };

        var login = _modal.Show<Throw>("", parameters, options);

        var result = await login.Result;

        if (!result.Cancelled)
        {
            User u = _userRepo.GetByGuid(id);

            //_userRepo.Delete(u);

            await InvokeAsync(() =>
            {
                StateHasChanged();
            });
        }
    }

    private void SendUserEmail(string e)
    {
        var user = _userRepo.GetUserWithRole(e);
        ComposeEmail(user);
    }

    private async void ComposeEmail(User u)
    {
        string formSubj = "Membership Account Information";

        if (new EmailAddressAttribute().IsValid(u.EmailAddress))
        {
            //string validateToken = ""; //Request.Form["g-recaptcha-response"]; //Request["g-recaptcha-response"];
            //if (string.IsNullOrEmpty(validateToken))
            //{
            //    //ModelState.AddModelError("Capt", "Invalid captcha, try again.");

            //    //ViewBag.JumpTo = "jumpToDetails"; //To maintain the scroll position

            //    //return View(mdl);
            //}

            //feedback.SubmitDate = CommonUtils.GetDateTimeNow();


            if (!string.IsNullOrEmpty(u.EmailAddress))
            {
                string msg = "Dear Member," + System.Environment.NewLine + System.Environment.NewLine +
                            "Please find your membership information below: " + System.Environment.NewLine + System.Environment.NewLine +
                            "Name : " + u.FirstName + " " + u.LastName + System.Environment.NewLine + System.Environment.NewLine +
                            "Mobile : " + u.Mobile + System.Environment.NewLine + System.Environment.NewLine +
                            "Email : " + u.EmailAddress + System.Environment.NewLine + System.Environment.NewLine + System.Environment.NewLine +
                            "Regards," + System.Environment.NewLine + System.Environment.NewLine +
                            "Web Admin Team";
                await _emailSender.SendEmailAsync(u.EmailAddress, formSubj, msg);
            }
        }
    }

}
